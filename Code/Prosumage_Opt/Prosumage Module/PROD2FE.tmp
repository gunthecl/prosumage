********************************************************************************
********************************************************************************
*   This model is a dispatch and investment model for PROSUMAGE households
*   PROSUMAGE households PROduce, conSUMe electricity and usage storAGE
*
*   Date of this version: October 10, 2018
*
********************************************************************************
********************************************************************************


******************* Format and model run specifications ************************

* ------------- household selection---------------------------------------------
* Select a household profile between V1 and V74:

$setglobal household_profile "V17"


* ------------- Base year selection---------------------------------------------
* Select year between 2010 and 2016:

$setglobal base_year "2014"

* ------------- Set data import and export options -----------------------------

* mark offXcel with a star to turn off excel import and import gdx file
* mark modelkill to create a gdx file only without model run

$setglobal offXcel ""
$setglobal modelkill ""

* Set column index (alphabetic) in excel file furthest to the right
* to speed up data import

$setglobal colindex "H"

* Name input file suffix other than "input data"
$setglobal modelrun ""

* Auto set of input file (do not change)
$setglobal uploadfile "data\%modelrun%input_data"

* Auto set of output file (do not change)
$setglobal outputfile "results\%modelrun%_results"


**************** Sets, variables, parameters declaration ***********************


Sets
h                Hours                                      /h1*h8760/
res_pro          Renewable technologies of prosumage HH     /solar/
sto_pro          Storage technolgies of prosumage HH        /storage/
year             Base years                                 /2010*2016/
hh_profile       Household load data                        /V1*V74/

;

Variables
Z_PRO                                 Prosumage: Objective value
;

Positive variables
CU_PRO(res_pro,h)                     Prosumage: Curtailment of prosumage pv energy
N_PV_PRO(res_pro)                     Prosumage: PV generation capacities
N_STO_E_PRO(sto_pro)                  Prosumage: Capacity of prosumage storage energy
N_STO_P_PRO(sto_pro)                  Prosumage: Capacity of prosumage storage power
E_M2PRO_PRO(h)                        Prosumage: Energy purchased from market for prosumage demand
G_PRO2M_PRO(res_pro,h)                Prosumage: Energy sold to market from prosumage pv generation
G_PRO2PRO_PRO(res_pro,h)              Prosumage: Prosumage pv generation direct consumed by household
STO_IN_PRO2PRO_PRO(res_pro,sto_pro,h) Prosumage: Storage loading from prosumage pv generation
STO_OUT_PRO2PRO_PRO(sto_pro,h)        Prosumage: Storage discharging to household demand
STO_L_PRO(sto_pro,h)                  Prosumage: Storage level prosumage household

;

Parameters
sto_pro_ini_last_PRO(sto_pro)        Prosumage: Level of storage in initial and last period
eta_sto_pro_in_PRO(sto_pro)          Prosumage: Efficiency: storage in
eta_sto_pro_out_PRO(sto_pro)         Prosumage: Efficiency: storage out
d_PRO(h)                             Prosumage: Household load
d_upload(h,hh_profile)               Prosumage: Household load - upload parameter
avail_solar_PRO(h)                   Prosumage: Hourly capacity factor for pv
avail_solar_upload(h,year)           Prosumage: Hourly capacity factor pv - upload parameter
pv_cap_max_PRO(res_pro)              Prosumage: PV capacity maximum
price_produce_PRO(h)                 Prosumage: Price for selling energy per kWh
price_produce_upload(h,year)         Prosumage: Price for selling energy per MWh - upload parameter
price_consume_PRO                    Prosumage: Price for energy consumption per kWh
c_i_sto_pro_e_PRO(sto_pro)           Prosumage: Cost: investment into storage energy
c_i_sto_pro_p_PRO(sto_pro)           Prosumage: Cost: investment into storage power
c_i_pv_PRO(res_pro)                  Prosumage: Cost: investment into renewable capacity
c_var_sto_pro_PRO(sto_pro)           Prosumage: Cost: variable generation costs storage

;


* Declare efficiency parameters
sto_pro_ini_last_PRO(sto_pro)  =  0.5    ;
eta_sto_pro_in_PRO(sto_pro)    =  0.81   ;
eta_sto_pro_out_PRO(sto_pro)   =  0.926  ;



* Declare cost parameters
c_i_sto_pro_e_PRO(sto_pro)  =  5418.14/1000 ;
c_i_sto_pro_p_PRO(sto_pro)  = 50995.48/1000 ;
c_i_pv_PRO('solar') = 60526.64/1000 ;
c_var_sto_pro_PRO(sto_pro)  =     0.5/1000  ;
price_consume_PRO       =     0.30  ;

* Declare further restrictions
pv_cap_max_PRO(res_pro) = 10;


***************************** Upload data **************************************

$onecho >%uploadfile%.tmp

par=d_upload                 rng=demand!a3:bw8764             rdim=1 cdim=1
par=avail_solar_upload       rng=solar!a3:%colindex%8764      rdim=1 cdim=1
par=price_produce_upload     rng=price!a3:%colindex%8764      rdim=1 cdim=1

$offecho


%offXcel%$call "gdxxrw %uploadfile%.xlsx squeeze=N @%uploadfile%.tmp  o=%uploadfile%.gdx  ";
$GDXin %uploadfile%.gdx
$load d_upload avail_solar_upload price_produce_upload
;

* Load data for specific household and base year
d_PRO(h)                   = d_upload(h,'%household_profile%') ;
avail_solar_PRO(h)         = avail_solar_upload(h,'%base_year%') ;

*Load market price as price per kWh
price_produce_PRO(h)        = price_produce_upload(h,'%base_year%')/1000 ;
*price_produce_PRO(h)        = 0.12 ;

$if "%modelkill%" == "*"  $abort Check GDX upload

****************************** Model setup *************************************

Equations
objective_PRO              Prosumage: Household objective function
hh_energy_balance          Prosumage: Household energy balance
pv_generation              Prosumage: Household use of pv energy generation
pv_install_max(res_pro)    Prosumage: Household PV installation capacity constraint

stolev_no_freelunch        Prosumage: Storage level in initial and last period
stolevel                   Prosumage: Storage level dynamics
stolev_max_energy          Prosumage: Storage capacity constraint on maximum energy
stoin_max_power            Prosumage: Storage capacity constraint on maximum power - storing in
stoout_max_power           Prosumage: Storage capacity constraint on maximum power - storing out
foresight_24h              Prosumage: Perfect foresight only for next 24h

pro_stolev_PRO
pro_stolev_M
pro_stolev_start_PRO
pro_stolev_start_M
pro_stolev
pro_stolev_start
;


*** Objective function: Minimize total system costs
objective_PRO..
   Z_PRO =E=

           sum( res_pro , c_i_pv_PRO(res_pro) * N_PV_PRO(res_pro) )
         + sum( sto_pro , c_i_sto_pro_e_PRO(sto_pro) * N_STO_E_PRO(sto_pro) + c_i_sto_pro_p_PRO(sto_pro) * N_STO_P_PRO(sto_pro) )
         + sum( (res_pro,sto_pro,h) , c_var_sto_pro_PRO(sto_pro) * ( STO_IN_PRO2PRO_PRO(res_pro,sto_pro,h)))
         + sum( (sto_pro,h) , c_var_sto_pro_PRO(sto_pro) *  STO_OUT_PRO2PRO_PRO(sto_pro,h) )
         + sum(  h , price_consume_PRO * (E_M2PRO_PRO(h) ))
         - sum(  (res_pro,h) , price_produce_PRO(h) * G_PRO2M_PRO(res_pro,h) )
;

*** Household energy balance: Satisfy load with own generation, storage and grid
hh_energy_balance(h)..

  d_PRO(h) =E=

            sum( res_pro , G_PRO2PRO_PRO(res_pro,h))
          + sum( sto_pro , STO_OUT_PRO2PRO_PRO(sto_pro,h))
          + E_M2PRO_PRO(h)
;

*** Household PV generation usage: Directly consumed, curtailed,stored or sold
pv_generation(res_pro,h)..

      avail_solar_PRO(h) * N_PV_PRO(res_pro) =E=

        CU_PRO(res_pro,h) + G_PRO2M_PRO(res_pro,h) + G_PRO2PRO_PRO(res_pro,h) + sum( sto_pro , STO_IN_PRO2PRO_PRO(res_pro,sto_pro,h) )

;

*** Restrict PV capacity
pv_install_max(res_pro)..

         N_PV_PRO(res_pro) =L= pv_cap_max_PRO(res_pro)
;


*** Technical constraints on storage

*Storage level for all hours except first: Prio level plus intake minus outflow

pro_stolev_start(sto_pro,'h1')..
        STO_L_PRO(sto_pro,'h1') =E=  STO_L_PRO(sto_pro,'h8760')
;

** Overall storage level
pro_stolev(sto_pro,h)$( (ord(h)>1) )..
         STO_L_PRO(sto_pro,h) =E=   STO_L_PRO(sto_pro,h-1) + sum( res_pro , STO_IN_PRO2PRO_PRO(res_pro,sto_pro,h))*eta_sto_pro_in_PRO(sto_pro) - STO_OUT_PRO2PRO_PRO(sto_pro,h)/eta_sto_pro_out_PRO(sto_pro)

;

* Storage maximum energy capacity
stolev_max_energy(sto_pro,h)..

         STO_L_PRO(sto_pro,h) =L= N_STO_E_PRO(sto_pro)
;

* Storage maximum charging capacity (power in)
stoin_max_power(sto_pro,h)..

         sum(res_pro, STO_IN_PRO2PRO_PRO(res_pro,sto_pro,h))+  =L= N_STO_P_PRO(sto_pro)
;

* Storage maximum discharging capacity (power out)
stoout_max_power(sto_pro,h)..

         STO_OUT_PRO2PRO_PRO(sto_pro,h) =L= N_STO_P_PRO(sto_pro)
;

***************************** Initialize model *********************************
Model prosumod /
objective_PRO
hh_energy_balance
pv_generation
pv_install_max
stolev_max_energy
stoin_max_power
stoout_max_power
pro_stolev
pro_stolev_start
/


options
optcr = 0.00
reslim = 10000000
lp = cplex
mip = cplex
nlp = conopt
dispwidth = 15
limrow = 0
limcol = 0
solprint = off
sysout = off
optcr = 1e-3
optca = 10
;

$onecho > cplex.opt
lpmethod 4
threads 4
epgap 1e-3
epagap 10
parallelmode -1
$offecho


solve   prosumod using lp min Z_PRO;

*Reporting Parameters
Parameters
E_purchased
E_sold;

E_purchased = sum((sto_pro,h), E_M2PRO_PRO.l(h) );
E_sold      = sum((res_pro,sto_pro,h), G_PRO2M_PRO.l(res_pro,h));


display d_PRO , N_PV_PRO.l , N_STO_E_PRO.l, N_STO_P_PRO.l,
         Z_PRO.l, E_M2PRO_PRO.l , G_PRO2M_PRO.l ,
        STO_L_PRO.l, price_produce_PRO, hh_energy_balance.m ,
        E_purchased , E_sold     ;


***************************** Set up reporting *********************************


