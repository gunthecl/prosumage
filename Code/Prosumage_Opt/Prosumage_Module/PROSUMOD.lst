GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/01/18 10:16:58 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ********************************************************************************
   2  ********************************************************************************
   3  *   This model is a dispatch and investment model for PROSUMAGE households
   4  *   PROSUMAGE households PROduce, conSUMe electricity and usage storAGE
   5  *
   6  *   Date of this version: October 17, 2018
   7  *
   8  ********************************************************************************
   9  ********************************************************************************
  10   
  11   
  12  ******************* Format and model run specifications ************************
  13   
  14  * ------------- Household selection---------------------------------------------
  15  * Select a household profile between V1 and V74:
  16   
  18   
  19   
  20  * ------------- Base year selection---------------------------------------------
  21  * Select year between 2010 and 2016:
  22   
  24   
  25  * ----------------- Select if to use MCP or LP format --------------------------
  26   
  27  * Set to "*" to select linear program, leave blank to select MCP
  29   
  30  * Do not change these two lines
  33   
  34  * --Select if to restrict storage level optimization to 24h horizon (faster)----
  35   
  37   
  38  * ------------- Set data import and export options -----------------------------
  39   
  40  * mark offXcel with a star to turn off excel import and import gdx file
  41  * mark modelkill to create a gdx file only without model run
  42   
  45   
  46  * Set column index (alphabetic) in excel file furthest to the right
  47  * to speed up data import
  48   
  50   
  51  * Name input file suffix other than "input data"
  53   
  54  * Auto set of input file (do not change)
  56   
  57  * Auto set of output file (do not change)
  59   
  60   
  61  **************** Sets, variables, parameters declaration ***********************
  62   
  63  Sets
  64  sto_pro          Storage technolgies of prosumage HH        /storage/
  65  res_pro          Renewable technologies of prosumage HH     /solar/
  66  h                Hours                                      /h3000*h3100/
  67  year             Base years                                 /2010*2016/
  68  hh_profile       Household load data                        /V1*V74/
  69   
  70  * Include subset of all first hours of days within a year
INCLUDE    C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\24h_FirstHours.gms
  72  Set
  73  h24(h)           Subset: First hour of day /h3001/
  74  */h2,h1,h25,h49,h73,h97,h121,h145,h169,h193,h217,h241,h265,h289,h313,h337,h361,h385,h409,h433,h457,h481,h505,h529,h553,h577,h601,h625,h649,h673,h697,h721,h745,h769,h793,h817,h841,h865,h889,h913,h937,h961,h985,h1009,h1033,h1057,h1081,h1105,h1129,h115
      3,h1177,h1201,h1225,h1249,h1273,h1297,h1321,h1345,h1369,h1393,h1417,h1441,h1465,h1489,h1513,h1537,h1561,h1585,h1609,h1633,h1657,h1681,h1705,h1729,h1753,h1777,h1801,h1825,h1849,h1873,h1897,h1921,h1945,h1969,h1993,h2017,h2041,h2065,h2089,h2113,h2137,h
      2161,h2185,h2209,h2233,h2257,h2281,h2305,h2329,h2353,h2377,h2401,h2425,h2449,h2473,h2497,h2521,h2545,h2569,h2593,h2617,h2641,h2665,h2689,h2713,h2737,h2761,h2785,h2809,h2833,h2857,h2881,h2905,h2929,h2953,h2977,h3001,h3025,h3049,h3073,h3097,h3121,h314
      5,h3169,h3193,h3217,h3241,h3265,h3289,h3313,h3337,h3361,h3385,h3409,h3433,h3457,h3481,h3505,h3529,h3553,h3577,h3601,h3625,h3649,h3673,h3697,h3721,h3745,h3769,h3793,h3817,h3841,h3865,h3889,h3913,h3937,h3961,h3985,h4009,h4033,h4057,h4081,h4105,h4129,h
      4153,h4177,h4201,h4225,h4249,h4273,h4297,h4321,h4345,h4369,h4393,h4417,h4441,h4465,h4489,h4513,h4537,h4561,h4585,h4609,h4633,h4657,h4681,h4705,h4729,h4753,h4777,h4801,h4825,h4849,h4873,h4897,h4921,h4945,h4969,h4993,h5017,h5041,h5065,h5089,h5113,h513
      7,h5161,h5185,h5209,h5233,h5257,h5281,h5305,h5329,h5353,h5377,h5401,h5425,h5449,h5473,h5497,h5521,h5545,h5569,h5593,h5617,h5641,h5665,h5689,h5713,h5737,h5761,h5785,h5809,h5833,h5857,h5881,h5905,h5929,h5953,h5977,h6001,h6025,h6049,h6073,h6097,h6121,h
      6145,h6169,h6193,h6217,h6241,h6265,h6289,h6313,h6337,h6361,h6385,h6409,h6433,h6457,h6481,h6505,h6529,h6553,h6577,h6601,h6625,h6649,h6673,h6697,h6721,h6745,h6769,h6793,h6817,h6841,h6865,h6889,h6913,h6937,h6961,h6985,h7009,h7033,h7057,h7081,h7105,h712
      9,h7153,h7177,h7201,h7225,h7249,h7273,h7297,h7321,h7345,h7369,h7393,h7417,h7441,h7465,h7489,h7513,h7537,h7561,h7585,h7609,h7633,h7657,h7681,h7705,h7729,h7753,h7777,h7801,h7825,h7849,h7873,h7897,h7921,h7945,h7969,h7993,h8017,h8041,h8065,h8089,h8113,h
      8137,h8161,h8185,h8209,h8233,h8257,h8281,h8305,h8329,h8353,h8377,h8401,h8425,h8449,h8473,h8497,h8521,h8545,h8569,h8593,h8617,h8641,h8665,h8689,h8713,h8737/
  75  ;
  76  ;
  77   
  78  Variables
  79  Z_PRO                        Prosumage: Objective value
  80  lambda_enerbal_PRO(h)        Prosumage: Dual variable of energy balance equation
  81  lambda_pvgen_PRO(res_pro,h)  Prosumage: Dual variable of pv generation equation
  82  lambda_stolev_PRO(sto_pro,h) Prosumage: Dual variable of storage level equation
  83  lambda_stolev24h_PRO(sto_pro,h) Prosumage: Dual variable of storage 24h horizon
  84  ;
  85   
  86  Positive Variables
  87  mu_pv_cap_PRO(res_pro)               Prosumage: Dual variable of max pv capacity inequality
  88  mu_stolev_cap_PRO(sto_pro,h)         Prosumage: Dual variable of max storage level inequality
  89  mu_stoin_cap_PRO(sto_pro,h)          Prosumage: Dual variable of max storing in inequality
  90  mu_stoout_cap_PRO(sto_pro,h)         Prosumage: Dual variable of max storing out inequality
  91  ;
  92   
  93  Positive variables
  94  CU_PRO(res_pro,h)                     Prosumage: Curtailment of prosumage pv energy
  95  N_RES_PRO(res_pro)                    Prosumage: PV generation capacities
  96  N_STO_E_PRO(sto_pro)                  Prosumage: Capacity of prosumage storage energy
  97  N_STO_P_PRO(sto_pro)                  Prosumage: Capacity of prosumage storage power
  98  G_MARKET_M2PRO(h)                     Prosumage: Energy purchased from market for prosumage demand
  99  G_MARKET_PRO2M(res_pro,h)             Prosumage: Energy sold to market from prosumage pv generation
 100  G_RES_PRO(res_pro,h)                  Prosumage: Prosumage pv generation direct consumed by household
 101  STO_IN_PRO2PRO(sto_pro,res_pro,h)     Prosumage: Storage loading from prosumage pv generation
 102  STO_OUT_PRO2PRO(sto_pro,h)            Prosumage: Storage discharging to household demand
 103  STO_L_PRO2PRO(sto_pro,h)              Prosumage: Storage level prosumage household
 104   
 105  ;
 106   
 107  Parameters
 108  eta_sto(sto_pro)                     Prosumage: Roundtrip efficiency
 109  d_PRO(h)                             Prosumage: Household load
 110  d_upload(h,hh_profile)               Prosumage: Household load - upload parameter
 111  avail_solar_PRO(h)                   Prosumage: Hourly capacity factor for pv
 112  avail_solar_upload(h,year)           Prosumage: Hourly capacity factor pv - upload parameter
 113  pv_cap_max_PRO(res_pro)              Prosumage: PV capacity maximum
 114  price_produce_PRO(h)                 Prosumage: Price for selling energy per kWh
 115  price_produce_upload(h,year)         Prosumage: Price for selling energy per MWh - upload parameter
 116  price_consume_PRO(h)                 Prosumage: Price for energy consumption per kWh
 117  c_i_sto_pro_e_PRO(sto_pro)           Prosumage: Cost: investment into storage energy
 118  c_i_sto_pro_p_PRO(sto_pro)           Prosumage: Cost: investment into storage power
 119  c_i_pv_PRO(res_pro)                  Prosumage: Cost: investment into renewable capacity
 120  c_var_sto_pro_PRO(sto_pro)           Prosumage: Cost: variable generation costs storage
 121   
 122  ;
 123   
 124   
 125  * Declare efficiency parameters
 126  eta_sto(sto_pro)               =  0.9   ;
 127   
 128  * Declare cost parameters
 129  c_i_sto_pro_e_PRO(sto_pro)  =  5418.14/1000/8760*card(h) ;
 130  c_i_sto_pro_p_PRO(sto_pro)  = 50995.48/1000/8760*card(h) ;
 131  c_i_pv_PRO('solar')         = 60526.64/1000/8760*card(h) ;
 132  c_var_sto_pro_PRO(sto_pro)  =     0.5/1000  ;
 133  price_consume_PRO(h)        =     0.30      ;
 134   
 135  * Declare further restrictions
 136  pv_cap_max_PRO(res_pro)     = 10;
 137   
 138   
 139  ***************************** Upload data **************************************
 140   
 148   
 149   
GDXIN   C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\data\input_data.gdx
--- LOAD  d_upload = 1:d_upload
--- LOAD  avail_solar_upload = 2:avail_solar_upload
--- LOAD  price_produce_upload = 3:price_produce_upload
 153  ;
 154   
 155  * Load data for specific household and base year
 156  d_PRO(h)                   = d_upload(h,'V17') ;
 157  avail_solar_PRO(h)         = avail_solar_upload(h,'2014') ;
 158   
 159  *Load market price as price per kWh
 160  price_produce_PRO(h)        = price_produce_upload(h,'2014')/1000 ;
 161  *price_produce_PRO(h)        = 0.12 ;
 162   
 164   
 165  ****************************** Model setup *************************************
 166   
 167  * Minimization Problem equations (Dual variables in parenthesis)
 168  Equations
 169  objective_PRO               Prosumage: Household objective function
 170  energy_balance_PRO          Prosumage: Household energy balance (lambda_enerbal_PRO )
 171  pv_generation_PRO           Prosumage: Household use of pv energy generation (lambda_pvgen_PRO)
 172  stolev_PRO                  Prosumage: Storage level dynamics (lambda_stolev_PRO)
 173  pv_install_max_PRO          Prosumage: Household PV installation capacity constraint (mu_pv_cap_PRO)
 174  stolev_max_energy_PRO       Prosumage: Storage capacity constraint on maximum energy (mu_stolev_cap_PRO)
 175  stolev_24h_PRO              Prosumage: Storage optimization time horizon constraint
 176  stoin_max_power_PRO         Prosumage: Storage capacity constraint on maximum power - storing in (mu_stoin_cap_PRO)
 177  stoout_max_power_PRO        Prosumage: Storage capacity constraint on maximum power - storing out (mu_stoout_cap_PRO)
 178  ;
 179   
 180  * Additional MCP equations and inequalities
 181  Equations
 182  KKT_CU_PRO                  Prosumage: FOC w.r.t CU_PRO
 183  KKT_N_RES_PRO               Prosumage: FOC w.r.t N_RES_PRO
 184  KKT_N_STO_E_PRO             Prosumage: FOC w.r.t N_STO_E_PRO
 185  KKT_N_STO_P_PRO             Prosumage: FOC w.r.t N_STO_P_PRO
 186  KKT_G_MARKET_M2PRO          Prosumage: FOC w.r.t G_MARKET_M2PRO
 187  KKT_G_MARKET_PRO2M          Prosumage: FOC w.r.t G_MARKET_PRO2M
 188  KKT_G_RES_PRO               Prosumage: FOC w.r.t G_RES_PRO
 189  KKT_STO_IN_PRO2PRO          Prosumage: FOC w.r.t STO_IN_PRO2PRO
 190  KKT_STO_OUT_PRO2PRO         Prosumage: FOC w.r.t STO_OUT_PRO2PRO
 191  KKT_STO_L_PRO2PRO           Prosumage: FOC w.r.t STO_L_PRO2PRO
 192  ;
 193   
 194  *** Objective function prosumage household: Minimize total electricity costs
 195  objective_PRO..
 196   Z_PRO =E=
 197        sum( res_pro , c_i_pv_PRO(res_pro) * N_RES_PRO(res_pro) )
 198      + sum( sto_pro , c_i_sto_pro_e_PRO(sto_pro) * N_STO_E_PRO(sto_pro))
 199      + sum( sto_pro , + c_i_sto_pro_p_PRO(sto_pro) * N_STO_P_PRO(sto_pro) )
 200      + sum( (sto_pro,res_pro,h) ,
 201              c_var_sto_pro_PRO(sto_pro)*(STO_IN_PRO2PRO(sto_pro,res_pro,h)))
 202      + sum( (sto_pro,h) ,
 203              c_var_sto_pro_PRO(sto_pro)*STO_OUT_PRO2PRO(sto_pro,h) )
 204      + sum(  h , price_consume_PRO(h) * (G_MARKET_M2PRO(h) ))
 205      - sum( (res_pro,h) , price_produce_PRO(h) * G_MARKET_PRO2M(res_pro,h) )
 206  ;
 207   
 208  *** Household energy balance: Satisfy load with own generation, storage and grid electricity
 209  energy_balance_PRO(h)..
 210            + sum( res_pro , G_RES_PRO(res_pro,h))
 211            + sum( sto_pro , STO_OUT_PRO2PRO(sto_pro,h))
 212            + G_MARKET_M2PRO(h)
 213            - d_PRO(h)
 214            =E= 0
 215  ;
 216   
 217  *** Household PV generation usage: Directly consumed, curtailed, stored or sold
 218  pv_generation_PRO(res_pro,h)..
 219         +  avail_solar_PRO(h)* N_RES_PRO(res_pro)
 220         -  CU_PRO(res_pro,h)
 221         -  G_MARKET_PRO2M(res_pro,h)
 222         -  G_RES_PRO(res_pro,h)
 223         -  sum( sto_pro , STO_IN_PRO2PRO(sto_pro,res_pro,h) )
 224         =E= 0
 225  ;
 226   
 227  *** Restrict PV capacity
 228  pv_install_max_PRO(res_pro)..
 229   
 230         pv_cap_max_PRO(res_pro) - N_RES_PRO(res_pro) =G= 0
 231  ;
 232   
 233   
 234  *** Technical constraints on storage
 235   
 236  ** Overall storage level
 237  stolev_PRO(sto_pro,h)..
 238          + sum(res_pro ,
 239            STO_IN_PRO2PRO(sto_pro,res_pro,h))*(1+eta_sto(sto_pro))/2
 240          - STO_OUT_PRO2PRO(sto_pro,h)*2/(1+eta_sto(sto_pro))
 241          - STO_L_PRO2PRO(sto_pro,h)
 242          + STO_L_PRO2PRO(sto_pro,h-1)$((ord(h)>1) )
 243          =E=   0
 244  ;
 245   
 246  stolev_24h_PRO(sto_pro,h)..
 247          - STO_L_PRO2PRO(sto_pro,h)$(h24(h)) =E= 0
 248  ;
 249   
 250  * Storage maximum energy capacity
 251  stolev_max_energy_PRO(sto_pro,h)..
 252           N_STO_E_PRO(sto_pro) - STO_L_PRO2PRO(sto_pro,h) =G= 0
 253  ;
 254   
 255  * Storage maximum charging capacity (power in)
 256  stoin_max_power_PRO(sto_pro,h)..
 257          N_STO_P_PRO(sto_pro)
 258       -  sum(res_pro, STO_IN_PRO2PRO(sto_pro,res_pro,h)) =G= 0
 259  ;
 260   
 261  * Storage maximum discharging capacity (power out)
 262  stoout_max_power_PRO(sto_pro,h)..
 263           N_STO_P_PRO(sto_pro) - STO_OUT_PRO2PRO(sto_pro,h) =G= 0
 264  ;
 265   
 266  * FOC w.r.t CU_PRO
 267  KKT_CU_PRO(res_pro,h)..
 268          lambda_pvgen_PRO(res_pro,h)
 269        =G= 0
 270  ;
 271   
 272  * FOC w.r.t N_RES_PRO
 273  KKT_N_RES_PRO(res_pro)..
 274               c_i_pv_PRO(res_pro)
 275             - sum(h, lambda_pvgen_PRO(res_pro,h)*avail_solar_PRO(h)  )
 276             + mu_pv_cap_PRO(res_pro)  =G= 0
 277   
 278  ;
 279   
 280  * FOC w.r.t N_STO_E_PRO
 281  KKT_N_STO_E_PRO(sto_pro)..
 282              c_i_sto_pro_e_PRO(sto_pro)
 283            - sum(h, mu_stolev_cap_PRO(sto_pro,h) )       =G=  0
 284   
 285  ;
 286   
 287  * FOC w.r.t N_STO_P_PRO
 288  KKT_N_STO_P_PRO(sto_pro)..
 289              c_i_sto_pro_p_PRO(sto_pro)
 290            - sum(h, mu_stoin_cap_PRO(sto_pro,h))
 291            - sum(h, mu_stoout_cap_PRO(sto_pro,h))        =G=  0
 292  ;
 293   
 294  * FOC w.r.t G_MARKET_M2PRO
 295  KKT_G_MARKET_M2PRO(h)..
 296             price_consume_PRO(h) - lambda_enerbal_PRO(h) =G=  0
 297  ;
 298   
 299  * FOC w.r.t G_MARKET_PRO2M
 300  KKT_G_MARKET_PRO2M(res_pro,h)..
 301           - price_produce_PRO(h) + lambda_pvgen_PRO(res_pro,h)  =G= 0
 302  ;
 303   
 304  * FOC w.r.t G_RES_PRO
 305  KKT_G_RES_PRO(res_pro,h)..
 306           - lambda_enerbal_PRO(h)
 307           + lambda_pvgen_PRO(res_pro,h)
 308          =G= 0
 309  ;
 310   
 311  * FOC w.r.t STO_IN_PRO2PRO
 312  KKT_STO_IN_PRO2PRO(sto_pro,res_pro,h)..
 313              c_var_sto_pro_PRO(sto_pro)
 314           +  lambda_pvgen_PRO(res_pro,h)
 315           -  lambda_stolev_PRO(sto_pro,h)*(1+eta_sto(sto_pro))/2
 316           +  mu_stoin_cap_PRO(sto_pro,h)
 317          =G= 0
 318   
 319  ;
 320   
 321  * FOC w.r.t STO_OUT_PRO2PRO
 322  KKT_STO_OUT_PRO2PRO(sto_pro,h)..
 323           c_var_sto_pro_PRO(sto_pro)
 324         - lambda_enerbal_PRO(h)
 325         + lambda_stolev_PRO(sto_pro,h)*2/(1+eta_sto(sto_pro))
 326         + mu_stoout_cap_PRO(sto_pro,h)
 327           =G= 0
 328  ;
 329   
 330  * FOC w.r.t STO_L_PRO2PRO
 331  KKT_STO_L_PRO2PRO(sto_pro,h)..
 332        + lambda_stolev_PRO(sto_pro,h)
 333        - lambda_stolev_PRO(sto_pro,h+1)
 334        + mu_stolev_cap_PRO(sto_pro,h)
 335  *$ontext
 336        + (lambda_stolev24h_PRO(sto_pro,h))$h24(h)
 339        =G= 0
 340  ;
 341   
 342   
 343   
 344   
 345  ***************************** Initialize model *********************************
 346   
 347  *Linear Program
 348  Model prosumod_lp /
 349  objective_PRO
 350  energy_balance_PRO
 351  pv_generation_PRO
 352  pv_install_max_PRO
 353  stolev_max_energy_PRO
 354  stoin_max_power_PRO
 355  stoout_max_power_PRO
 356  stolev_PRO
 357  *$ontext
 358  stolev_24h_PRO
 361   
 362  /
 363   
 364   
 365  * MCP Format
 366  Model prosumod_mcp /
 367  energy_balance_PRO.lambda_enerbal_PRO
 368  pv_generation_PRO.lambda_pvgen_PRO
 369  stolev_PRO.lambda_stolev_PRO
 370  pv_install_max_PRO.mu_pv_cap_PRO
 371  stolev_max_energy_PRO.mu_stolev_cap_PRO
 372  stoin_max_power_PRO.mu_stoin_cap_PRO
 373  stoout_max_power_PRO.mu_stoout_cap_PRO
 374  KKT_CU_PRO.CU_PRO
 375  KKT_N_RES_PRO.N_RES_PRO
 376  KKT_N_STO_E_PRO.N_STO_E_PRO
 377  KKT_N_STO_P_PRO.N_STO_P_PRO
 378  KKT_G_MARKET_M2PRO.G_MARKET_M2PRO
 379  KKT_G_MARKET_PRO2M.G_MARKET_PRO2M
 380  KKT_G_RES_PRO.G_RES_PRO
 381  KKT_STO_IN_PRO2PRO.STO_IN_PRO2PRO
 382  KKT_STO_OUT_PRO2PRO.STO_OUT_PRO2PRO
 383  KKT_STO_L_PRO2PRO.STO_L_PRO2PRO
 384  *$ontext
 385  stolev_24h_PRO.lambda_stolev24h_PRO
 388   
 389  /
 390   
 391  options
 392  optcr = 0.00
 393  reslim = 10000000
 394  lp = cplex
 395  mip = cplex
 396  nlp = conopt
 397  dispwidth = 15
 398  limrow = 0
 399  limcol = 0
 400  solprint = off
 401  sysout = off
 402  optcr = 1e-3
 403  optca = 10
 404  PROFILETOL = 10;
 405   
 406  ;
 407   
 417   
 418   
 419  Set dict /
 420  gussoptions      .opt            .modstats
 421  /
 422   
 423   
 424   
 425   
      solve   prosumod_lp using lp min Z_PRO;
      $ontext
 430   
 431  *$ontext
 432  solve   prosumod_mcp using mcp;
 435   
 436   
 437  * Reporting
INCLUDE    C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\report.gms
 439   
 440   
 441  ********************************************************************************
 442  **** Parameters for report file  ***********************************************
 443  ********************************************************************************
 444   
 445  Parameter
 446  calc_maxprice
 447  calc_minprice
 448   
 449  report
 450  report_tech
 451  report_tech_hours
 452  report_hours
 453  report_cost
 454   
 455  gross_energy_demand
 456  full_load_hours
 457  energy_to_market
 458  energy_from_market
 459  self_consumption_rate
 460  self_sufficiency_rate
 461   
 462  ;
 463   
 464   
 465   
 466   
 467  ********************************************************************************
 468  **** Initialize reporting paremetrs  *******************************************
 469  ********************************************************************************
 470  * ----------------------------------------------------------------------------
 471   
 472  * Define gross energy demand for reporting
 473  gross_energy_demand = sum( h , d_PRO(h)  )   ;
 474   
 475  * Define full load hours of PV
 476  full_load_hours(res_pro)     = sum( h , avail_solar_PRO(h));
 477   
 478  * Define market interaction parameters
 479  energy_to_market                   = sum ( (res_pro,h),  G_MARKET_PRO2M.l(res_pro,h) )      ;
 480  energy_from_market                 = sum ( h, G_MARKET_M2PRO.l(h) )               ;
 481  self_consumption_rate              = sum ( (sto_pro,res_pro,h), G_RES_PRO.l(res_pro,h) + STO_IN_PRO2PRO.l(sto_pro,res_pro,h) ) / sum(res_pro, full_load_hours(res_pro) );
 482  self_sufficiency_rate              = sum ( (sto_pro,res_pro,h), G_RES_PRO.l(res_pro,h) + STO_IN_PRO2PRO.l(sto_pro,res_pro,h) ) / gross_energy_demand   ;
 483   
 484   
 485  ;
 486   
 487   
 488  ********************************************************************************
 489  **** Report  *******************************************************************
 490  ********************************************************************************
 491   
 492         report('Household demand')      = gross_energy_demand ;
 493         report('Energy from market')    = energy_from_market ;
 494         report('Energy to   market')    = energy_to_market ;
 495         report('Self consumption rate') = self_consumption_rate ;
 496         report('Self sufficiency rate') = self_sufficiency_rate ;
 497  * ----------------------------------------------------------------------------
 498   
 499  * REPORT HOURS
 500          report_hours('demand consumers',h)         = d_PRO(h) ;
 501          report_hours('energy generated',h)         =  sum( res_pro, avail_solar_PRO(h)*N_RES_PRO.l(res_pro) ) ;
 502          report_hours('energy curtailed',h)         =  sum( res_pro, CU_PRO.l(res_pro, h));
 503          report_hours('energy directly consumed',h) =  sum( res_pro, G_RES_PRO.l(res_pro,h));
 504          report_hours('energy to market',h)         =  sum( res_pro, G_MARKET_PRO2M.l(res_pro,h));
 505          report_hours('energy from market',h)       =  G_MARKET_M2PRO.l(h) ;
 506          report_hours('energy stored in',h)         =  sum( (sto_pro,res_pro), STO_IN_PRO2PRO.l(sto_pro,res_pro,h));
 507          report_hours('energy stored out',h)        =  sum( (sto_pro), STO_OUT_PRO2PRO.l(sto_pro,h));
 508          report_hours('storage level',h)            =  sum( (sto_pro), STO_L_PRO2PRO.l(sto_pro,h));
 509   
 510  * REPORT TECH HOURS
 511          report_tech_hours('energy curtailed',res_pro,h)=  CU_PRO.l(res_pro,h);
 512   
 513   
 514  * REPORT TECH
 515           report_tech('Full load hours', res_pro)  = full_load_hours(res_pro) ;
 516   
 517  * ---------------------------------------------------------------------------- *
 518  * ---------------------------------------------------------------------------- *
 519   
 520   
 521  *Reporting Parameters
 522  Parameters
 523  E_purchased
 524  E_sold
 525  Z_PRO_mcp
 526  mean_price
 527  full_load
 528  self_cons_rate;
 529   
 530  E_purchased = sum((sto_pro,h), G_MARKET_M2PRO.l(h) );
 531  E_sold      = sum((res_pro,sto_pro,h), G_MARKET_PRO2M.l(res_pro,h));
 532  Z_PRO_mcp   = sum( res_pro , c_i_pv_PRO(res_pro) * N_RES_PRO.l(res_pro) )
 533                   + sum( sto_pro , c_i_sto_pro_e_PRO(sto_pro) * N_STO_E_PRO.l(sto_pro) + c_i_sto_pro_p_PRO(sto_pro) * N_STO_P_PRO.l(sto_pro) )
 534                   + sum( (sto_pro,res_pro,h) , c_var_sto_pro_PRO(sto_pro) * ( STO_IN_PRO2PRO.l(sto_pro,res_pro,h)))
 535                   + sum( (sto_pro,h) , c_var_sto_pro_PRO(sto_pro) *  STO_OUT_PRO2PRO.l(sto_pro,h) )
 536                   + sum(  h , price_consume_PRO(h) * (G_MARKET_M2PRO.l(h) ))
 537                   - sum(  (res_pro,h) , price_produce_PRO(h) * G_MARKET_PRO2M.l(res_pro,h) )  ;
 538   
 539  mean_price = sum( h,  price_produce_PRO(h))/card(h)*1000;
 540  full_load  = sum(h, avail_solar_PRO(h));
 541  self_cons_rate(res_pro) = sum(h, G_RES_PRO.l(res_pro,h)
 542  + sum(sto_pro, STO_IN_PRO2PRO.l(sto_pro,res_pro,h)*(1+eta_sto(sto_pro))/2) ) / sum(h, avail_solar_PRO(h)*N_RES_PRO.l(res_pro));
 543   
 544   
 545  display d_PRO , N_RES_PRO.l , N_STO_E_PRO.l, N_STO_P_PRO.l,
 546            G_MARKET_M2PRO.l , G_MARKET_PRO2M.l ,
 547          STO_L_PRO2PRO.l, price_produce_PRO, energy_balance_PRO.m ,
 548          E_purchased , E_sold, Z_PRO_mcp , mean_price , full_load, self_cons_rate
 549  ;
 550   
 551   
 552  ********************************************************************************
 553  ****                              Reporting to Excel                        ****
 554  ********************************************************************************
 555   
 556   
 557  execute_unload "results", report, report_tech, report_hours;
 558  ;
 559   
 560  Parameter
 561  results_to_excel;
 562   
 563  execute_unload "results_to_excel", report, report_tech, report_hours;
 564  ;
 565   
 566  execute 'gdxxrw.exe results_to_excel.gdx par=report rng=a2 rdim=1' ;
 567  execute 'gdxxrw.exe results_to_excel.gdx par=report_tech rng=a8' ;
 568  execute 'gdxxrw.exe results_to_excel.gdx par=report_hours rng=a14' ;
 569   
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/01/18 10:16:58 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\PROSUMOD.gms
     2       71 INCLUDE        1      71  .C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\24h_FirstHours.gms
     3      150 CALL           1     146  gdxxrw data\input_data.xlsx squeeze=N @data\input_data.tmp  o=data\input_data.gdx  
     4      151 GDXIN          1     147  C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\data\input_data.gdx
     5      438 INCLUDE        1     434  .C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\report.gms


COMPILATION TIME     =        3.838 SECONDS      3 MB  25.1.2 r67455 WEX-WEI
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/01/18 10:16:58 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE prosumod_mcp Using MCP From line 432


MODEL STATISTICS

BLOCKS OF EQUATIONS          18     SINGLE EQUATIONS        1,318
BLOCKS OF VARIABLES          18     SINGLE VARIABLES        1,318
NON ZERO ELEMENTS         3,556     NON LINEAR N-Z              0
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                   0


GENERATION TIME      =        0.031 SECONDS      5 MB  25.1.2 r67455 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      5 MB  25.1.2 r67455 WEX-WEI
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/01/18 10:16:58 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE prosumod_mcp Using MCP From line 432


               S O L V E      S U M M A R Y

     MODEL   prosumod_mcp        
     TYPE    MCP                 
     SOLVER  PATH                FROM LINE  432

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   

 RESOURCE USAGE, LIMIT          0.031  10000000.000
 ITERATION COUNT, LIMIT       793    2000000000
 EVALUATION ERRORS              0             0
1318 row/cols, 3556 non-zeros, 0.20% dense.

Path 4.7.04 (Tue Jul 31 15:20:37 2018)
Written by Todd Munson, Steven Dirkse, and Michael Ferris

INITIAL POINT STATISTICS
Maximum of X. . . . . . . . . .  4.7600e-02 var: (lambda_pvgen_PRO(solar,h3067))
Maximum of F. . . . . . . . . .  1.8886e+00 eqn: (energy_balance_PRO(h3062))
Maximum of Grad F . . . . . . .  1.0526e+00 eqn: (KKT_STO_OUT_PRO2PRO(storage,h)
                                            var: (lambda_stolev_PRO(storage,h30)

INITIAL JACOBIAN NORM STATISTICS
Maximum Row Norm. . . . . . . .  1.5600e+02 eqn: (KKT_N_STO_P_PRO(storage))
Minimum Row Norm. . . . . . . .  2.0000e+00 eqn: (energy_balance_PRO(h3005))
Maximum Column Norm . . . . . .  1.5600e+02 var: (N_STO_P_PRO(storage))
Minimum Column Norm . . . . . .  2.0000e+00 var: (lambda_enerbal_PRO(h3005))

FINAL STATISTICS
Inf-Norm of Complementarity . .  2.4586e-07 eqn: (KKT_STO_L_PRO2PRO(storage,h30)
Inf-Norm of Normal Map. . . . .  8.8114e-08 eqn: (pv_generation_PRO(solar,h3065)
Inf-Norm of Minimum Map . . . .  8.8114e-08 eqn: (pv_generation_PRO(solar,h3065)
Inf-Norm of Fischer Function. .  8.8114e-08 eqn: (pv_generation_PRO(solar,h3065)
Inf-Norm of Grad Fischer Fcn. .  7.8131e-08 eqn: (KKT_STO_IN_PRO2PRO(storage,so)
Two-Norm of Grad Fischer Fcn. .  2.1416e-07

FINAL POINT STATISTICS
Maximum of X. . . . . . . . . .  9.3049e+00 var: (N_STO_E_PRO(storage))
Maximum of F. . . . . . . . . .  9.3049e+00 eqn: (stolev_max_energy_PRO(storage)
Maximum of Grad F . . . . . . .  1.0526e+00 eqn: (KKT_STO_OUT_PRO2PRO(storage,h)
                                            var: (lambda_stolev_PRO(storage,h30)



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0  REDEFINED
                             0     ERRORS
                           389  PROJECTED
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/01/18 10:16:58 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    545 PARAMETER d_PRO  Prosumage: Household load

h3000 0.330,    h3001 0.182,    h3002 0.118,    h3003 0.148,    h3004 0.205,    h3005 0.686,    h3006 0.581,    h3007 0.646,    h3008 0.574,    h3009 0.544,    h3010 0.569,    h3011 0.613,    h3012 0.512,    h3013 0.534,    h3014 0.586,    h3015 1.524
h3016 1.889,    h3017 0.772,    h3018 0.648,    h3019 0.664,    h3020 1.111,    h3021 1.378,    h3022 0.627,    h3023 0.777,    h3024 0.161,    h3025 0.269,    h3026 0.124,    h3027 0.103,    h3028 0.196,    h3029 0.543,    h3030 0.529,    h3031 0.624
h3032 0.610,    h3033 0.508,    h3034 0.589,    h3035 0.611,    h3036 0.457,    h3037 0.541,    h3038 1.325,    h3039 0.529,    h3040 1.108,    h3041 1.850,    h3042 0.741,    h3043 0.576,    h3044 0.777,    h3045 0.752,    h3046 0.763,    h3047 1.361
h3048 0.616,    h3049 0.314,    h3050 0.098,    h3051 0.195,    h3052 0.182,    h3053 0.306,    h3054 0.541,    h3055 0.586,    h3056 0.531,    h3057 0.730,    h3058 1.855,    h3059 1.034,    h3060 1.662,    h3061 0.989,    h3062 1.889,    h3063 1.762
h3064 1.680,    h3065 1.871,    h3066 0.572,    h3067 0.620,    h3068 0.616,    h3069 0.488,    h3070 0.557,    h3071 0.774,    h3072 0.316,    h3073 0.166,    h3074 0.133,    h3075 0.151,    h3076 0.183,    h3077 0.273,    h3078 0.530,    h3079 0.628
h3080 0.557,    h3081 0.706,    h3082 0.768,    h3083 1.620,    h3084 1.488,    h3085 1.513,    h3086 0.766,    h3087 0.575,    h3088 0.794,    h3089 0.605,    h3090 1.430,    h3091 1.730,    h3092 1.206,    h3093 0.747,    h3094 0.597,    h3095 0.591
h3096 0.147,    h3097 0.209,    h3098 0.177,    h3099 0.147,    h3100 0.216


----    545 VARIABLE N_RES_PRO.L  Prosumage: PV generation capacities

solar 6.023


----    545 VARIABLE N_STO_E_PRO.L  Prosumage: Capacity of prosumage storage energy

storage 9.305


----    545 VARIABLE N_STO_P_PRO.L  Prosumage: Capacity of prosumage storage power

storage 1.455


----    545 VARIABLE G_MARKET_M2PRO.L  Prosumage: Energy purchased from market for prosumage demand

h3000 0.330,    h3001 0.182,    h3002 0.118,    h3003 0.148,    h3004 0.205,    h3005 0.475,    h3091 0.257


----    545 VARIABLE G_MARKET_PRO2M.L  Prosumage: Energy sold to market from prosumage pv generation

                 h3009            h3031            h3032            h3033            h3034            h3035            h3036            h3037            h3038            h3039            h3054            h3055            h3056            h3061

solar            0.006            0.557            1.323            2.010            2.483            2.166            2.256            1.968            0.671            0.732            0.296            0.205            0.105            0.508

    +            h3067            h3079            h3080            h3081            h3082            h3083            h3084

solar            0.006            0.281            1.725            2.265            0.789            0.346            0.285


----    545 VARIABLE STO_L_PRO2PRO.L  Prosumage: Storage level prosumage household

                   h3006            h3007            h3008            h3009            h3010            h3011            h3012            h3013            h3014            h3015            h3016            h3017            h3018            h3019

storage            0.226            1.099            2.379            3.762            5.058            6.261            7.474            8.535            9.305            8.652            7.190            6.682            6.209            5.516

      +            h3020            h3021            h3022            h3023            h3024            h3025            h3026            h3027            h3028            h3029            h3035            h3036            h3037            h3038

storage            4.347            2.896            2.236            1.418            1.248            0.965            0.835            0.726            0.519            0.043            1.276            2.658            4.040            5.423

      +            h3039            h3040            h3041            h3042            h3043            h3044            h3045            h3046            h3047            h3048            h3049            h3050            h3051            h3052

storage            6.805            7.497            6.526            6.032            5.445            4.627            3.835            3.032            1.599            0.950            0.619            0.516            0.310            0.119

      +            h3055            h3056            h3057            h3058            h3059            h3060            h3061            h3062            h3063            h3064            h3065            h3066            h3067            h3068

storage            0.868            2.250            3.404            3.782            4.826            5.695            7.078            7.709            7.331            6.577            5.046            4.666            4.013            3.365

      +            h3069            h3070            h3071            h3072            h3073            h3074            h3075            h3076            h3077            h3078            h3081            h3082            h3083            h3084

storage            2.851            2.265            1.450            1.117            0.943            0.803            0.645            0.452            0.216 1.07437801943E-8            0.107            1.490            2.872            4.254

      +            h3085            h3086            h3087            h3088            h3089            h3090            h3091            h3092            h3093            h3094            h3095            h3096            h3097            h3098

storage            5.169            5.809            6.544            6.711            6.961            5.779            4.247            2.977            2.191            1.563            0.942            0.787            0.568            0.382

      +            h3099

storage            0.227


----    545 PARAMETER price_produce_PRO  Prosumage: Price for selling energy per kWh

h3000 0.028,    h3001 0.026,    h3002 0.024,    h3003 0.024,    h3004 0.027,    h3005 0.032,    h3006 0.038,    h3007 0.039,    h3008 0.036,    h3009 0.033,    h3010 0.033,    h3011 0.030,    h3012 0.030,    h3013 0.031,    h3014 0.032,    h3015 0.032
h3016 0.034,    h3017 0.037,    h3018 0.039,    h3019 0.039,    h3020 0.038,    h3021 0.034,    h3022 0.031,    h3023 0.029,    h3024 0.028,    h3025 0.026,    h3026 0.024,    h3027 0.026,    h3028 0.027,    h3029 0.035,    h3030 0.044,    h3031 0.047
h3032 0.043,    h3033 0.042,    h3034 0.042,    h3035 0.038,    h3036 0.037,    h3037 0.033,    h3038 0.031,    h3039 0.030,    h3040 0.032,    h3041 0.035,    h3042 0.037,    h3043 0.037,    h3044 0.037,    h3045 0.035,    h3046 0.031,    h3047 0.029
h3048 0.027,    h3049 0.026,    h3050 0.026,    h3051 0.026,    h3052 0.027,    h3053 0.036,    h3054 0.038,    h3055 0.037,    h3056 0.029,    h3057 0.028,    h3058 0.027,    h3059 0.027,    h3060 0.027,    h3061 0.026,    h3062 0.027,    h3063 0.027
h3064 0.031,    h3065 0.038,    h3066 0.040,    h3067 0.048,    h3068 0.043,    h3069 0.037,    h3070 0.027,    h3071 0.025,    h3072 0.023,    h3073 0.020,    h3074 0.015,    h3075 0.020,    h3076 0.023,    h3077 0.034,    h3078 0.037,    h3079 0.039
h3080 0.037,    h3081 0.036,    h3082 0.035,    h3083 0.028,    h3084 0.026,    h3085 0.024,    h3086 0.023,    h3087 0.024,    h3088 0.027,    h3089 0.030,    h3090 0.035,    h3091 0.035,    h3092 0.035,    h3093 0.029,    h3094 0.024,    h3095 0.022
h3096 0.017,    h3097 0.015,    h3098 0.015,    h3099 0.016,    h3100 0.016


----    545 EQUATION energy_balance_PRO.M  Prosumage: Household energy balance (lambda_enerbal_PRO )

h3000 0.300,    h3001 0.300,    h3002 0.300,    h3003 0.300,    h3004 0.300,    h3005 0.300,    h3006 0.070,    h3007 0.070,    h3008 0.070,    h3009 0.033,    h3010 0.070,    h3011 0.070,    h3012 0.070,    h3013 0.070,    h3014 0.070,    h3015 0.144
h3016 0.144,    h3017 0.144,    h3018 0.144,    h3019 0.144,    h3020 0.144,    h3021 0.144,    h3022 0.144,    h3023 0.144,    h3024 0.144,    h3025 0.144,    h3026 0.144,    h3027 0.144,    h3028 0.144,    h3029 0.144,    h3030 0.144,    h3031 0.047
h3032 0.043,    h3033 0.042,    h3034 0.042,    h3035 0.038,    h3036 0.037,    h3037 0.033,    h3038 0.031,    h3039 0.030,    h3040 0.038,    h3041 0.043,    h3042 0.043,    h3043 0.043,    h3044 0.043,    h3045 0.043,    h3046 0.043,    h3047 0.043
h3048 0.043,    h3049 0.043,    h3050 0.043,    h3051 0.043,    h3052 0.043,    h3053 0.043,    h3054 0.038,    h3055 0.037,    h3056 0.029,    h3057 0.037,    h3058 0.037,    h3059 0.037,    h3060 0.037,    h3061 0.026,    h3062 0.037,    h3063 0.042
h3064 0.042,    h3065 0.277,    h3066 0.042,    h3067 0.042,    h3068 0.042,    h3069 0.042,    h3070 0.042,    h3071 0.042,    h3072 0.042,    h3073 0.042,    h3074 0.042,    h3075 0.042,    h3076 0.042,    h3077 0.042,    h3078 0.042,    h3079 0.039
h3080 0.037,    h3081 0.036,    h3082 0.035,    h3083 0.028,    h3084 0.026,    h3085 0.036,    h3086 0.036,    h3087 0.036,    h3088 0.036,    h3089 0.036,    h3090 0.041,    h3091 0.300,    h3092 0.041,    h3093 0.041,    h3094 0.041,    h3095 0.041
h3096 0.041,    h3097 0.041,    h3098 0.041,    h3099 0.041,    h3100 0.041


----    545 PARAMETER E_purchased          =             1.717  
            PARAMETER E_sold               =            20.983  
            PARAMETER Z_PRO_mcp            =             5.406  
            PARAMETER mean_price           =            30.769  
            PARAMETER full_load            =            15.573  

----    545 PARAMETER self_cons_rate  

solar 0.759



EXECUTION TIME       =        2.979 SECONDS      4 MB  25.1.2 r67455 WEX-WEI


USER: Medium MUD - 10 User License                   S180308:0349AO-GEN
      Deutsches Institut fuer Wirtschaftsforschung DIW, AbteilungDC3975
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\PROSUMOD.gms
Output     C:\Users\cguenther\Documents\GitHub\prosumage\Code\Prosumage_Opt\Prosumage_Module\PROSUMOD.lst
