********************************************************************************
********************************************************************************
*   This model is a dispatch and investment model for PROSUMAGE households
*   PROSUMAGE households PROduce, conSUMe electricity and usage storAGE
*
*   Date of this version: August 6, 2018
*
********************************************************************************
********************************************************************************


******************* Format and model run specifications ************************

* ------------- household selection---------------------------------------------
* Select a household profile between V1 and V74:

$setglobal household_profile "V17"


* ------------- Base year selection---------------------------------------------
* Select year between 2010 and 2016:

$setglobal base_year "2014"



* ------------- Set data import and export options -----------------------------

* mark offXcel with a star to turn off excel import and import gdx file
* mark modelkill to create a gdx file only without model run

$setglobal offXcel ""
$setglobal modelkill ""

* Set column index (alphabetic) in excel file furthest to the right
* to speed up data import

$setglobal colindex "H"

* Name input file suffix other than "input data"
$setglobal modelrun ""

* Auto set of input file (do not change)
$setglobal uploadfile "data\%modelrun%input_data"

* Auto set of output file (do not change)
$setglobal outputfile "results\%modelrun%_results_MCP"


**************** Sets, variables, parameters declaration ***********************


Sets
h                Hours                                   /h2000*h3000/
res              Renewable technologies                  /renewable/
sto              Storage technolgies                     /storage/
year             Base years                              /2010*2016/
hh_profile       Household load data                     /V1*V74/
ct               Dispatchable Technologies               /base, peak/

;

Variables
Z                        Objective
;

Positive variables
*Household variables
G_PV_hh(h)              Generation of pv plant
CU_hh(h)                Curtailment of pv energy
N_PV_hh                 PV generation capacities
N_STO_E_hh             Capacities: storage energy
N_STO_P_hh             Capacities: storage power
STO_L_hh(h)             Storage level
STO_IN_hh(h)            Storage intake
STO_OUT_hh(h)           Storage generation
E_buy_hh(h)                 Energy purchased from market
E_sell_hh(h)                Energy sold to market
lambda_hh(h)
mu_hh(h)
gamma1_hh
gamma2_hh(h)
gamma3_hh(h)
gamma4_hh(h)
levelsto_hh(h)
;

Positive variables
*System variables
G_CON(ct,h)              Generation of conventional electricity
G_RENEWABLE(h)       Generation of renewable energy
CU( h)                Curtailment of renewable energy
N_RENEWABLE         Capacities: renewable energy
N_CON(ct)                Capacities: conventional energy
N_STO_E          Capacities: storage energy
N_STO_P          Capacities: storage power
STO_L(h)          Storage level
STO_IN(h)         Storage intake
STO_OUT(h)        Storage generation
lambda(h)
mu(h)
gamma1(ct,h)
gamma2(h)
gamma3(h)
gamma4(h)
levelsto(h)
resshare
;



Parameters
* Household Parameters
sto_ini_last_hh             Level of storage in first and last period of the analysis
eta_sto_in_hh               Efficiency: storage in
eta_sto_out_hh              Efficiency: storage out
d_hh(h)                     Household load
d_upload_hh(h,hh_profile)   Household load - upload parameter
avail_solar(h)              Hourly capacity factor for pv
avail_solar_upload(h,year)  Hourly capacity factor pv - upload parameter
pv_cap_max                  PV capacity maximum
price_market_upload(h,year) Price for selling energy per MWh - upload parameter
price_buy                   Price for energy consumption per kWh
c_i_sto_e_hh                Cost: investment into storage energy
c_i_sto_p_hh                Cost: investment into storage power
c_i_pv_hh                   Cost: investment into renewable capacity
c_var_sto_hh                Cost: variable generation costs storage
lev_Z                       Objective value: Annual electricity costs
lev_EB                      Level of purchased electricity from grid
lev_ES                      Level of sold electricity to grid
price_market(h)             Price for selling energy per kWh
test(h)
;


Parameters
*System Parameters
phi_sto_ini              Level of storage in first and last period of the analysis
eta_sto_in               Efficiency: storage in
eta_sto_out              Efficiency: storage out
phi_min_res              Minimum share of renewable electricity in net consumption
phi_max_curt             Maximum share of renewable electricity curtailed over the year
d(h)                     Electricity demand
d_upload(h,year)         Electricity demand - upload parameter
phi_res( h)              Hourly capacity factor renewable energy
phi_res_upload(h,year)   Hourly capacity factor renewable energy - upload parameter
c_i_sto_e                Cost: investment into storage energy
c_i_sto_p                Cost: investment into storage power
c_i_res                  Cost: investment into renewable capacity
c_i_con(ct)              Cost: investment into conventional capacity
c_var_con(ct)            Cost: variable generation costs conventional energy
c_var_sto                Cost: variable generation costs storage
penalty                  Penalty term
share_solar(year)        Share of solar energy among total variable renewable energy
share_wind(year)         Share of wind energy among total variable renewable energy
;

**************** Specify Parameters ***********************

* Specify household Parameters
* Declare efficiency parameters
sto_ini_last_hh  =  0.5 ;
eta_sto_in_hh    =  0.81 ;
eta_sto_out_hh   =  0.926 ;
penalty = 0 ;


* Declare cost parameters
c_i_sto_e_hh  =  5418.14/1000 ;
c_i_sto_p_hh  = 50995.48/1000 ;
c_i_pv_hh     = 60526.64/1000 ;
c_var_sto_hh  =     0.5/1000 ;
price_buy     =     0.30 ;

* Declare further restrictions
pv_cap_max = 10;


* Specify System Parameters
phi_sto_ini = 0.5 ;
eta_sto_in  = 0.81 ;
eta_sto_out = 0.926 ;
penalty     = 0 ;
phi_min_res = 0.6;

*Historical energy shares of wind and solar PV in base years
*Source: OPSD (2017), see upload_data.xlsx
share_solar('2012') = 0.378304182 ;
share_solar('2013') = 0.385519442 ;
share_solar('2014') = 0.390535228 ;
share_solar('2015') = 0.310511627 ;
share_solar('2016') = 0.310454625 ;

share_wind('2012') = 0.621795818 ;
share_wind('2013') = 0.614480558 ;
share_wind('2014') = 0.609464772 ;
share_wind('2015') = 0.689488373 ;
share_wind('2016') = 0.689545375 ;

* Specify system costs
c_i_sto_e           = 5418.14 ;
c_i_sto_p           = 50995.48 ;
c_i_res             = share_solar('%base_year%') * 60526.64 + share_wind('%base_year%') * 108869.81 ;
c_i_con('base')     = 102393.68 ;
c_i_con('peak')     = 47840.27 ;
c_var_con('base')   = 31.03 ;
c_var_con('peak')   = 78.36 ;
c_var_sto           = 0.5 ;

***************************** Upload data **************************************

* Upload household data
$onecho >%uploadfile%.tmp

par=d_upload_hh          rng=demand!a3:bw8764             rdim=1 cdim=1
par=avail_solar_upload   rng=solar!a3:%colindex%8764      rdim=1 cdim=1
par=price_market_upload  rng=price!a3:%colindex%8764      rdim=1 cdim=1

$offecho

%offXcel%$call "gdxxrw %uploadfile%.xlsx squeeze=N @%uploadfile%.tmp  o=%uploadfile%.gdx  ";
$GDXin %uploadfile%.gdx
$load d_upload_hh avail_solar_upload price_market_upload
;

* Load data for specific household and base year
d_hh(h)                = d_upload_hh(h,'%household_profile%') ;
avail_solar(h)         = avail_solar_upload(h,'%base_year%') ;

*Load market price as price per kWh
price_market(h)        = price_market_upload(h,'%base_year%')/1000 ;
*price_market(h)        = 0.12 ;


* Upload system relevant data
$onecho >temp.tmp
par=d_upload             rng=data!a3:f8763       rdim=1 cdim=1
par=phi_res_upload       rng=data!h3:m8763       rdim=1 cdim=1
$offecho

$call "gdxxrw data/upload_data.xlsx @temp.tmp o=Data_input";
$GDXin Data_input.gdx
$load d_upload phi_res_upload
;

* Initialize base year
phi_res(h) = phi_res_upload(h,'%base_year%') ;
d(h) = d_upload(h,'%base_year%') ;

$if "%modelkill%" == "*"  $abort Check GDX upload

****************************** Model setup *************************************

Equations
*Household
objective_hh                  Objective function
hh_energy_balance_hh          Household energy balance
pv_generation_hh              Household use of pv energy generation
pv_install_max_hh             PV capacity constraint
stolev_no_freelunch_hh        Storage level in initial and last period
stolevel_hh                   Storage level dynamics
stolev_max_energy_hh          Storage capacity constraint on maximum energy
stoin_max_power_hh            Storage capacity constraint on maximum power - storing in
stoout_max_power_hh           Storage capacity constraint on maximum power - storing out
KKTNPV_hh
KKTNSTOE_hh
KKTNSTOP_hh
KKTEB_hh
KKTES_hh
KKTG_hh
KKTSTOIN_hh
KKTSTOUT_hh
KKTSTOLEV_hh
KKTCU_hh
;


Equations
*System
*objective                Objective function
energy_balance           Energy balance (market clearing)
renewable_generation     Use of renewable energy generation
minRES                   Constraint on minimum share of renewables
*maximum_curtailment      Constraint on maximum share of renewables curtailment
*maximum_loss             Constraint on maximum share of renewable energy loss
maximum_generation_con   Capacity constraint - conventional generation
*stolev_start_end         Storage: storage level in the first and last period
stolev                   Storage: storage level dynamics
stolev_max               Storage: capacity constraint on maximum energy
maxin_power              Storage: capacity constraint on maximum power - storing in
maxout_power             Storage: capacity constraint on maximum power - storing out
KKTNRES
KKTNSTOE
KKTNSTOP
KKTNCON
KKTGCON
KKTGRES
KKTSTOIN
KKTSTOUT
KKTSTOLEV
KKTCU

;



************************* Declare household Equations **************************
*** Objective function: Minimize total household electricity costs
objective_hh..

   Z =E=

          c_i_pv_hh* N_PV_hh
         + c_i_sto_e_hh * N_STO_E_hh + c_i_sto_p_hh * N_STO_P_hh
         + sum( (h) , c_var_sto_hh * (STO_IN_hh(h) + STO_OUT_hh(h)) )
         + sum(  h , price_buy * E_buy_hh(h))
         - sum(  h , price_market(h) * E_sell_hh(h))
;

*** Household energy balance: Satisfy load with own generation, storage and grid
hh_energy_balance_hh(h)..


           G_PV_hh(h)
         + STO_OUT_hh(h)
         + (E_buy_hh(h)/1000)   =E=
          d_hh(h)
;

*** Household PV generation usage: Directly consumed, CU_hhrtailed,stored or sold
pv_generation_hh(h)..

      avail_solar(h) * N_PV_hh =E=
        G_PV_hh(h)
      + CU_hh(h)
      + STO_IN_hh(h)
      + (E_sell_hh(h)/1000)
;

*** Restrict PV capacity
pv_install_max_hh..

          pv_cap_max - N_PV_hh =G= 0
;




*** Technical constraints on storage
*Storage level in first and last period must be the same
$ontext
stolev_no_freelunch..

          STO_L_hh('h8760') - STO_L_hh('h1') =E= 0
;

$offtext

*Storage level for all hours except first: Prio level plus intake minus outflow
stolevel_hh(h)..


         STO_L_hh(h--1)
         + STO_IN_hh(h) * eta_sto_in_hh
         - STO_OUT_hh(h)/eta_sto_out_hh
         =E=  STO_L_hh(h)
;

* Storage maximum energy capacity
stolev_max_energy_hh(h)..

          N_STO_E_hh  - STO_L_hh(h) =G= 0
;

* Storage maximum charging capacity (power in)
stoin_max_power_hh(h)..

           N_STO_P_hh - STO_IN_hh(h) =G= 0
;

* Storage maximum discharging capacity (power out)
stoout_max_power_hh(h)..

          N_STO_P_hh  - STO_OUT_hh(h) =G= 0
;


KKTNPV_hh..

  c_i_pv_hh- sum( h, mu_hh(h)*avail_solar(h)) + gamma1_hh =G= 0

;
KKTNSTOE_hh..

  c_i_sto_e_hh  - sum(h, gamma2_hh(h)) =G= 0

;
KKTNSTOP_hh..

    c_i_sto_p_hh  - sum(h, gamma3_hh(h)) - sum(h, gamma4_hh(h)) =G= 0

;

KKTEB_hh(h)..

         price_buy - lambda_hh(h) =G= 0

;

KKTES_hh(h)..

           -price_market(h)   + mu_hh(h) =G=  0

;

KKTG_hh(h)..

      - lambda_hh(h) + mu_hh(h) =G= 0


;

KKTCU_hh(h)..

      + mu_hh(h) =G= 0
;

KKTSTOIN_hh(h)..

         c_var_sto_hh + mu_hh(h) + gamma3_hh(h) - levelsto_hh(h)*eta_sto_in_hh =G= 0

;
KKTSTOUT_hh(h)..

          c_var_sto_hh -lambda_hh(h) + gamma4_hh(h) + levelsto_hh(h)/eta_sto_out_hh =G= 0


;

KKTSTOLEV_hh(h)..


     gamma2_hh(h) + levelsto_hh(h) - levelsto_hh(h++1) =G= 0

;

************************* Declare System Equations *****************************

$ontext
objective..
         Z =E= sum( sto , c_i_sto_e  * N_STO_E  + c_i_sto_p  * N_STO_P  )
         + sum( res , c_i_res(res) * N_RENEWABLE(res) )
         + sum( ct , c_i_con(ct) * N_CON(ct) )
         + sum( (ct,h) , c_var_con(ct) * G_CON(ct,h) )
         + sum( ( h) , c_var_sto  * (STO_IN( h) + STO_OUT( h)) )
;
$offtext


energy_balance(h)..

         sum( ct , G_CON(ct,h))
        + G_RENEWABLE(h)
        + STO_OUT(h)
        + E_sell_hh(h)
         =E= d(h)
        + E_buy_hh(h)
;

renewable_generation(h)..


          phi_res(h) * N_RENEWABLE
         =E= G_RENEWABLE(h) + CU(h) +  STO_IN(h)
;


minRES..
         (1-phi_min_res) * sum( h , d(h) )  =G= sum( (ct,h) , G_CON(ct,h) )
;

maximum_generation_con(ct,h)..

         N_CON(ct) =G= G_CON(ct,h)
;


stolev(h)..
        STO_L(h--1)
      + STO_IN(h) * eta_sto_in
      - STO_OUT(h)/eta_sto_out
      =E=  STO_L(h)
;

stolev_max(h)..

          N_STO_E  =G= STO_L( h)
;


maxin_power(h)..

         N_STO_P  =G=  STO_IN( h)
;

maxout_power(h)..

       N_STO_P   =G=  STO_OUT( h)
;


KKTNRES..


  c_i_res - sum( h, mu(h)*phi_res(h)) =G= 0

;
KKTNSTOE..

       c_i_sto_e  - sum(h, gamma2(h)) =G= 0
;

KKTNSTOP..
       c_i_sto_p  - sum(h, gamma3(h)) - sum(h, gamma4(h)) =G= 0

;

KKTNCON(ct)..

    c_i_con(ct) - sum(h, gamma1(ct,h))  =G= 0

;

KKTGCON(ct,h)..

      c_var_con(ct) - lambda(h) + resshare + gamma1(ct,h)  =G= 0

;

KKTGRES(h)..

                 - lambda(h) + mu(h) =G= 0

;

KKTSTOIN(h)..

               c_var_sto + mu(h) + gamma3(h) - levelsto(h)*eta_sto_in =G= 0

;

KKTSTOUT(h)..


  c_var_sto - lambda(h) + gamma4(h) + levelsto(h)/eta_sto_out =G= 0



;

KKTSTOLEV(h)..


      gamma2(h) + levelsto(h) - levelsto(h++1) =G= 0


;


KKTCU(h)..

      mu(h) =G= 0

;



***************************** Initialize model *********************************
Model prosumodmcp /

hh_energy_balance_hh.lambda_hh
pv_generation_hh.mu_hh
pv_install_max_hh.gamma1_hh
stolevel_hh.levelsto_hh
stolev_max_energy_hh.gamma2_hh
stoin_max_power_hh.gamma3_hh
stoout_max_power_hh.gamma4_hh
KKTNPV_hh.N_PV_hh
KKTNSTOE_hh.N_STO_E_hh
KKTNSTOP_hh.N_STO_P_hh
KKTEB_hh.E_buy_hh
KKTES_hh.E_sell_hh
KKTG_hh.G_PV_hh
KKTSTOIN_hh.STO_IN_hh
KKTSTOUT_hh.STO_OUT_hh
KKTSTOLEV_hh.STO_L_hh
KKTCU_hh.CU_hh

energy_balance.lambda
renewable_generation.mu
minRES.resshare
maximum_generation_con.gamma1
stolev.levelsto
stolev_max.gamma2
maxin_power.gamma3
maxout_power.gamma4
KKTNRES.N_RENEWABLE
KKTNSTOE.N_STO_E
KKTNSTOP.N_STO_P
KKTNCON.N_CON
KKTGCON.G_CON
KKTGRES.G_RENEWABLE
KKTSTOIN.STO_IN
KKTSTOUT.STO_OUT
KKTSTOLEV.STO_L
KKTCU.CU


/


options
optcr = 0.00
reslim = 10000000
lp = cplex
mip = cplex
nlp = conopt
dispwidth = 15
limrow = 0
limcol = 0
solprint = off
sysout = off
optcr = 1e-3
optca = 10
*PROFILETOL = 10

;

$onecho > cplex.opt
lpmethod 4
threads 4
epgap 1e-3
epagap 10
parallelmode -1
$offecho

* Set up lower bounds for speed up
* Household Variables
G_PV_hh.up(h)              = 10  ;
CU_hh.up(h)                = 10  ;
N_PV_hh.up                 = 10  ;
N_STO_E_hh.up              = 15  ;
N_STO_P_hh.up              = 15  ;
STO_L_hh.up(h)             = 15  ;
STO_IN_hh.up(h)            = 15  ;
STO_OUT_hh.up(h)           = 15  ;
E_buy_hh.up(h)             = 50  ;
E_sell_hh.up(h)            = 10  ;
* System Variables
G_CON.up(ct,h)             = 100000 ;
G_RENEWABLE.up(h)          = 300000 ;
CU.up(h)                   = 150000 ;
N_RENEWABLE.up             = 300000 ;
N_CON.up(ct)               = 100000 ;
N_STO_E.up                 = 150000 ;
N_STO_P.up                 = 100000 ;
STO_L.up(h)                = 150000 ;
STO_IN.up(h)               = 100000  ;
STO_OUT.up(h)              = 100000  ;

* Set up initial values for speed up
STO_L_hh.l(h)   = 4.367;
N_PV_hh.l       = 8    ;
N_STO_E_hh.l    = 10   ;
N_STO_P_hh.l    = 1.5  ;
N_RENEWABLE.l              = 43000  ;
N_CON.l(ct)                = 100000  ;
N_STO_E.l                  = 120000 ;
N_STO_P.l                  = 100000  ;
energy_balance.m(h)        = 900  ;
price_market(h)            =  energy_balance.m(h)/1000;

solve prosumodmcp using mcp;

display d_hh , N_PV_hh.l , E_buy_hh.l , E_sell_hh.l ,  G_PV_hh.l,
        price_market,  CU_hh.l, N_RENEWABLE.l, d, G_RENEWABLE.l,
        G_CON.l, STO_OUT.l, lambda.l, lambda.m, mu.l, mu.m, energy_balance.m,
        N_CON.l, N_STO_E_hh.l;


***************************** Set up reporting *********************************

$ontext
pv_install_max_hh.m, pv_generation_hh.m, N_STO_E_hh.l, N_STO_P_hh.l,
   hh_energy_balance_hh.m
$offtext
